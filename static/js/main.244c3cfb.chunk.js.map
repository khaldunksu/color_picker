{"version":3,"sources":["component/ColorList.js","component/RgbtoHex.js","App.js","index.js"],"names":["ColorList","colorList","setColorFromList","loadColorList","class","type","id","data-toggle","aria-haspopup","aria-expanded","onClick","aria-labelledby","map","item","className","href","style","color","colorName","hex","backgroundColor","RgbtoHex","state","redValue","greenValue","blueValue","hexValue","hexCode","isClick","loadRGB","setState","getHexFromInt","int","Number","toString","length","loadHexValue","loadHexCode","setColor","value","prevState","this","aria-label","min","max","onChange","event","target","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.244c3cfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ColorList = ({ colorList, setColorFromList, loadColorList }) => {\r\n  \r\n  return (\r\n\r\n    <div class=\"dropdown\">\r\n      <button class=\"btn btn-secondary dropdown-toggle\"\r\n        type=\"button\" id=\"dropdownMenuButton\"\r\n        data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n        aria-expanded=\"false\"\r\n        onClick={loadColorList}\r\n      >\r\n        Color selection\r\n      </button>\r\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n        {colorList.map(item => <div className=\"color_selection\"><a class=\"dropdown-item\" href=\"#\" style={{ color: item.colorName }}\r\n          onClick={() => setColorFromList(item.hex)}>\r\n          {item.colorName}\r\n          <div className='color_block' style={{ backgroundColor: item.hex }} ></div>\r\n        </a></div>)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorList;","import React from 'react';\r\nimport ColorList from './ColorList'\r\n\r\nconst color = [{ colorName: \"RED\", hex: '#ff0000' }, { colorName: \"BLUE\", hex: '#0000ff' },\r\n{ colorName: \"YELLOW\", hex: '#ffff00' }, { colorName: \"GREEN\", hex: '#00ff00' }];\r\n\r\nclass RgbtoHex extends React.Component {\r\n  state = {\r\n    redValue: 0,\r\n    greenValue: 0,\r\n    blueValue: 0,\r\n    hexValue: '',\r\n    colorList: [],\r\n    hexCode: '',\r\n    isClick: false\r\n  }\r\n\r\n  loadRGB = () => {\r\n    this.setState({\r\n      isClick: true\r\n    })\r\n  }\r\n  setColorFromList = (hex) => {\r\n    this.setState({\r\n      hexValue: hex,\r\n      hexCode: hex\r\n    })\r\n  }\r\n\r\n  getHexFromInt = (int) => {\r\n    let hex = Number(int).toString(16);\r\n    if (hex.length < 2) {\r\n      hex = '0' + hex;\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  loadHexValue = () => {\r\n    const { redValue, greenValue, blueValue } = this.state;\r\n    this.setState({\r\n      hexValue: '#' + this.getHexFromInt(redValue) + this.getHexFromInt(greenValue)\r\n        + this.getHexFromInt(blueValue),\r\n    });\r\n  }\r\n\r\n  loadHexCode = () => {\r\n    const { redValue, greenValue, blueValue } = this.state;\r\n    this.setState({\r\n      hexCode: '#' + this.getHexFromInt(redValue) + this.getHexFromInt(greenValue)\r\n        + this.getHexFromInt(blueValue),\r\n    });\r\n  }\r\n\r\n  setColor = (color, value) => {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      [color]: value,\r\n    }), () => {\r\n      this.loadHexValue()\r\n    })\r\n  }\r\n\r\n  loadColorList = () => {\r\n    this.setState({\r\n      colorList: [...color]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { colorList, redValue, greenValue, blueValue, hexCode, hexValue } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <div class=\"input-group\">\r\n          <input type=\"text\" class=\"form-control hex\" aria-label=\"Text input with dropdown button\"\r\n            value={hexCode}></input>\r\n          <div class=\"input-group-append\">\r\n            <button class=\" main_color_block\"\r\n              style={{ backgroundColor: hexValue }} onClick={this.loadRGB}\r\n              type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></button>\r\n            <div class=\"dropdown-menu\">\r\n              <div className=\"rgb_menu\">\r\n                <p className=\"rgb\">R<input class=\"dropdown-item \" type='range' value={redValue}\r\n                  min=\"0\" max=\"255\" className=\"range\"\r\n                  onChange={(event) => this.setColor('redValue', event.target.value)}></input></p>\r\n                <p className=\"rgb\">G<input class=\"dropdown-item\" type='range' value={greenValue}\r\n                  min=\"0\" max=\"255\" className=\"range\"\r\n                  onChange={(event) => this.setColor('greenValue', event.target.value)}></input></p>\r\n                <p className=\"rgb\">B<input class=\"dropdown-item\" type='range' value={blueValue}\r\n                  min=\"0\" max=\"255\" className=\"range\"\r\n                  onChange={(event) => this.setColor('blueValue', event.target.value)}></input></p>\r\n              </div>\r\n              <div className='button'>\r\n                <button class=\"dropdown-item\" type='button' onClick={this.loadHexCode}>Ok</button>\r\n                <button class=\"dropdown-item \" type='button'>Cancel</button></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ColorList colorList={colorList}\r\n          setColorFromList={this.setColorFromList}\r\n          loadColorList={this.loadColorList} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default RgbtoHex;\r\n","import React  from 'react';\nimport RgbtoHex from './component/RgbtoHex'\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <h1>Color picker</h1>\n      <div>\n       <RgbtoHex/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}